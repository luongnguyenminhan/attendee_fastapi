version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: attendee_fastapi_db
      POSTGRES_USER: attendee_fastapi_user
      POSTGRES_PASSWORD: attendee_fastapi_password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    networks:
      - attendee_network
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U attendee_fastapi_user -d attendee_fastapi_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for Celery and Caching
  redis:
    image: redis:7-alpine
    networks:
      - attendee_network
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis:/data/redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Build base image chỉ một lần
  attendee-base:
    build:
      context: .
      dockerfile: Dockerfile
    image: attendee-fastapi:latest
    command: ["echo", "Base image built successfully"]

  # FastAPI Main Application
  attendee-app:
    image: attendee-fastapi:latest
    volumes:
      - .:/attendee_fastapi
    networks:
      - attendee_network
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      attendee-base:
        condition: service_completed_successfully
    environment:
      - DATABASE_URL=postgresql+asyncpg://attendee_fastapi_user:attendee_fastapi_password@postgres:5432/attendee_fastapi_db
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=attendee_fastapi_user
      - REDIS_URL=redis://redis:6379/5
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/attendee_fastapi
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    restart: unless-stopped

  # Celery Worker for Background Tasks
  attendee-worker:
    image: attendee-fastapi:latest
    volumes:
      - .:/attendee_fastapi
    networks:
      - attendee_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      attendee-base:
        condition: service_completed_successfully
    environment:
      - DATABASE_URL=postgresql+asyncpg://attendee_fastapi_user:attendee_fastapi_password@postgres:5432/attendee_fastapi_db
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=attendee_fastapi_user
      - REDIS_URL=redis://redis:6379/5
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/attendee_fastapi
      # Bot automation environment
      - DISPLAY=:99
    command: ["celery", "-A", "app.jobs.celery_app", "worker", "-l", "INFO"]
    restart: unless-stopped

  # Celery Beat Scheduler for Scheduled Tasks
  attendee-scheduler:
    image: attendee-fastapi:latest
    volumes:
      - .:/attendee_fastapi
    networks:
      - attendee_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      attendee-base:
        condition: service_completed_successfully
    environment:
      - DATABASE_URL=postgresql+asyncpg://attendee_fastapi_user:attendee_fastapi_password@postgres:5432/attendee_fastapi_db
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=attendee_fastapi_user
      - REDIS_URL=redis://redis:6379/5
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/attendee_fastapi
    command: ["celery", "-A", "app.jobs.celery_app", "beat", "-l", "INFO"]
    restart: unless-stopped

  # Flower for Celery Monitoring (Optional) - DISABLED due to compatibility issues
  attendee-flower:
    image: attendee-fastapi:latest
    volumes:
      - .:/attendee_fastapi
    networks:
      - attendee_network
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - attendee-base
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/attendee_fastapi
    command: ["/bin/bash", "-c", "cd /attendee_fastapi && python -m flower --app=app.jobs.celery_app flower --port=5555"]
    restart: unless-stopped

networks:
  attendee_network:
    driver: bridge

volumes:
  postgres:
  redis:


